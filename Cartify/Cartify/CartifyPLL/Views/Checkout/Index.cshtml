@model CartifyBLL.ViewModels.Checkout.CheckoutVm
@{
    ViewData["Title"] = "Checkout";
}

<div class="container py-5">
    <h2 class="mb-4">Checkout</h2>

    <form id="checkoutForm" asp-action="ProcessOrder" asp-controller="Checkout" method="post" novalidate>
        @Html.AntiForgeryToken()

        <div class="row">
            <!-- LEFT COLUMN -->
            <div class="col-md-8">

                <!-- SHIPPING ADDRESS -->
                <div class="card mb-4 shadow-sm">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Shipping Address</h5>
                        <a href="@Url.Action("Profile", "Account")#address" class="btn btn-sm btn-outline-primary">
                            Manage Addresses
                        </a>
                    </div>
                    <div class="card-body">
                        @if (Model.UserAddresses?.Any() == true)
                        {
                            @foreach (var address in Model.UserAddresses)
                            {
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="SelectedAddressId"
                                           value="@address.Id" @(Model.SelectedAddressId == address.Id ? "checked" : null) required>
                                    <label class="form-check-label">
                                        @address.StreetAddress, @address.City, @address.State, @address.Country - @address.PostalCode
                                        @if (address.IsDefault)
                                        {
                                            <span class="badge bg-success ms-2">Default</span>
                                        }
                                    </label>
                                </div>
                            }
                            <span asp-validation-for="SelectedAddressId" class="text-danger"></span>
                        }
                        else
                        {
                            <div class="alert alert-warning" role="alert">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                <strong>No saved addresses found.</strong>
                                Please <a href="@Url.Action("Profile", "Account")#address" class="alert-link">add an address</a> to continue.
                            </div>
                        }
                    </div>
                </div>

                <!-- PAYMENT METHOD - Updated with Multiple Options -->
                <div class="card mb-4 shadow-sm">
                    <div class="card-header">
                        <h5>
                            Payment Method
                        </h5>
                    </div>
                    <div class="card-body">
                        <!-- Payment Method Selection -->
                        <div class="mb-4">
                            <!-- Stripe Payment Option -->
                            <div class="form-check mb-3 p-3 border rounded">
                                <input class="form-check-input" type="radio" name="PaymentMethod"
                                       id="stripePayment" value="Stripe" @(Model.PaymentMethod == "Stripe" ? "checked" : "") required>
                                <label class="form-check-label w-100" for="stripePayment">
                                    <div class="d-flex align-items-center">
                                        
                                        <div>
                                            <strong>Credit/Debit Card</strong>
                                            <small class="text-muted d-block">Pay securely with your card via Stripe</small>
                                        </div>
                                    </div>
                                </label>
                            </div>

                            <!-- Cash on Delivery Option -->
                            <div class="form-check mb-3 p-3 border rounded">
                                <input class="form-check-input" type="radio" name="PaymentMethod"
                                       id="codPayment" value="COD" @(Model.PaymentMethod == "COD" ? "checked" : "") required>
                                <label class="form-check-label w-100" for="codPayment">
                                    <div class="d-flex align-items-center">
                                        <i class="fas fa-money-bill-wave me-3 text-success" style="font-size: 1.5rem;"></i>
                                        <div>
                                            <strong>Cash on Delivery</strong>
                                            <small class="text-muted d-block">Pay when you receive your order</small>
                                        </div>
                                    </div>
                                </label>
                            </div>
                        </div>

                       
                        

                        
                    </div>
                </div>
            </div>

            <!-- RIGHT COLUMN -->
            <div class="col-md-4">
                <div class="card shadow-sm">
                    <div class="card-header">
                        <h5>
                            <i class="fas fa-shopping-cart me-2"></i>Order Summary
                        </h5>
                    </div>
                    <div class="card-body">
                        <!-- Cart Items -->
                        <ul class="list-group list-group-flush">
                            @foreach (var item in Model.Cart.Items)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                    <div>
                                        <strong>@item.ProductName</strong><br />
                                        <small class="text-muted">Qty: @item.Quantity</small>
                                    </div>
                                    <span class="fw-bold">@item.TotalPrice.ToString("C")</span>
                                </li>
                            }
                        </ul>

                        <hr>

                        <!-- Order Totals -->
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal</span>
                            <strong>@Model.SubTotal.ToString("C")</strong>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Tax</span>
                            <strong>@Model.Tax.ToString("C")</strong>
                        </div>
                        <div class="d-flex justify-content-between mb-3">
                            <span>Shipping</span>
                            <strong>@Model.ShippingCost.ToString("C")</strong>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-4">
                            <strong style="font-size: 1.1rem;">Total</strong>
                            <strong style="font-size: 1.1rem;" class="text-primary">@Model.Total.ToString("C")</strong>
                        </div>

                        <!-- Place Order Button -->
                        <button type="submit" class="btn btn-primary btn-lg w-100" id="placeOrderBtn">
                           
                            <span id="btnText">Place Order</span>
                            <span id="btnSpinner" class="spinner-border spinner-border-sm ms-2 d-none" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </span>
                        </button>

                        
                        
                    </div>
                </div>

                
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const stripeRadio = document.getElementById('stripePayment');
            const codRadio = document.getElementById('codPayment');
            const stripeDetails = document.getElementById('stripeDetails');
            const codDetails = document.getElementById('codDetails');
            const btnText = document.getElementById('btnText');
            const paymentInfoText = document.getElementById('paymentInfoText');
            const trustBadges = document.getElementById('trustBadges');

            function updatePaymentMethod() {
                // Hide all details first
                stripeDetails.style.display = 'none';
                codDetails.style.display = 'none';

                if (stripeRadio.checked) {
                    stripeDetails.style.display = 'block';
                    btnText.textContent = 'Proceed to Secure Payment';
                    paymentInfoText.textContent = "You'll be redirected to Stripe for secure payment";
                    trustBadges.style.display = 'block';
                } else if (codRadio.checked) {
                    codDetails.style.display = 'block';
                    btnText.textContent = 'Place Order';
                    paymentInfoText.textContent = "Your order will be confirmed immediately";
                    trustBadges.style.display = 'none';
                }
            }

            // Initialize on page load
            updatePaymentMethod();

            // Add event listeners
            stripeRadio.addEventListener('change', updatePaymentMethod);
            codRadio.addEventListener('change', updatePaymentMethod);

            // Form submission
            document.getElementById("checkoutForm").addEventListener("submit", function (e) {
                // Check if user selected an address
                if (!document.querySelector('input[name="SelectedAddressId"]:checked')) {
                    e.preventDefault();
                    alert("Please select a shipping address before proceeding.");
                    return;
                }

                // Check if payment method is selected
                if (!document.querySelector('input[name="PaymentMethod"]:checked')) {
                    e.preventDefault();
                    alert("Please select a payment method before proceeding.");
                    return;
                }

                // Show loading state
                const btn = document.getElementById("placeOrderBtn");
                const btnSpinner = document.getElementById("btnSpinner");

                btn.disabled = true;
                btnText.textContent = "Processing...";
                btnSpinner.classList.remove("d-none");
            });
        });

        // Bootstrap tooltips
        document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(el => {
            new bootstrap.Tooltip(el);
        });
    </script>
}
